buildscript {
	ext {
		springBootVersion = '2.7.3'
	}

	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}

subprojects {
	apply plugin: 'java-test-fixtures'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'devgraft'
	version = '0.0.1'
	sourceCompatibility = '11'

	repositories {
		mavenCentral()
	}
	ext {
		set('springCloudVersion', "2021.0.0")
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		compileOnly 'org.projectlombok:lombok'

		testFixturesApi("org.mockito:mockito-core:3.5.13")
		testFixturesApi("org.junit.jupiter:junit-jupiter-api:5.8.2")
		testFixturesApi("org.assertj:assertj-core:3.22.0")
		testFixturesApi "com.fasterxml.jackson.core:jackson-databind"
		testFixturesApi 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
		testFixturesApi 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

		if (!project.name.contains("support-")) {
			implementation(project(':components:support-mapper'))
			implementation(project(':components:support-exception'))
			testImplementation(testFixtures(project(":components:support-exception")))
			testImplementation(testFixtures(project(":components:support-mapper")))
		}

		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	test {
		useJUnitPlatform()
	}

	if (!project.name.contains("app-")) {
		bootJar { enabled = false }
	}
}