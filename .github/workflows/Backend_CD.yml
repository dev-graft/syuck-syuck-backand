
name: Backend_CD
on:
  push:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: devgraft-deploy
  RESOURCE_PATH: ./src/main/resources/application-prod.yml
  CODE_DEPLOY_APPLICATION_NAME: devgraft-syuck-syuck-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: syuck-syuck-server

jobs:
  backend-cd-task:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Set yaml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ env.RESOURCE_PATH }}
      env:
        spring.datasource.url: ${{ secrets.DB_CONNECT_URL }}
        spring.datasource.username: ${{ secrets.DB_USERNAME }}
        spring.datasource.password: ${{ secrets.DB_PASSWORD }}

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build
    
    - name: BootJar with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew bootJar
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Cache docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-latest
        restore-keys: |
          ${{ runner.os }}-buildx-
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
        
    - name: Docker Image Build and push
      uses: docker/build-push-action@v2
      id: docker_build
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/syuck-syuck-demo:latest
          
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
        aws-region: ${{ secrets.AWS_REGION }} 
        
        
